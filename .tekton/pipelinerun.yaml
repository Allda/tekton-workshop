---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: pac-demo
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[pull_request, push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the tasks from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: ["git-clone, black, yaml-lint, pylint, buildah"]

    # You can add more tasks by increasing the suffix number, you can specify
    # them as array to have multiple of them.
    # browse the tasks you want to include from hub on https://hub.tekton.dev/
    #
    # pipelinesascode.tekton.dev/task-2: "[curl, buildah]"

    # how many runs we want to keep attached to this event
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: shared-workspace
      - name: basic-auth
    tasks:
      # Step 1: Clone the repository
    - name: git-clone
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.git_url)
        - name: revision
          value: $(params.git_revision)
      workspaces:
        - name: output
          workspace: shared-workspace

    # Step 2: Run linting and static code analysis
    - name: black
      taskRef:
        name: black
      runAfter:
        - git-clone
      params:
        - name: args
          value: [".", "--check", "--diff"]
        - name: image
          value: python:3.12-slim
      workspaces:
        - name: shared-workspace
          workspace: shared-workspace

    - name: yaml-lint
      taskRef:
        name: yaml-lint
      runAfter:
        - git-clone
      workspaces:
        - name: shared-workspace
          workspace: shared-workspace
      params:
        - name: args
          value: ["."]

    - name: pylint
      taskRef:
        name: pylint
      runAfter:
        - git-clone
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: args
          value: ["."]

    # Step 3: Build the container image
    - name: build
      taskRef:
        name: buildah
      runAfter:
        - pylint
        - black
        - yaml-lint
      params:
      - name: IMAGE
        value: "quay.io/user/myapp"
      # Try to enable push to any registry of your choice
      # and mount a secret for authentication if needed
      # For additional information, please refer to the official documentation
      # https://hub.tekton.dev/tekton/task/buildah
      - name: SKIP_PUSH
        value: "false"
      workspaces:
      - name: source
        workspace: shared-workspace

  workspaces:
    - name: shared-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    # This workspace will inject secret to help the git-clone task to be able to
    # checkout the private repositories
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"